@page "/students"
@using System.ComponentModel.DataAnnotations

<h3>Students</h3>
<button class="btn btn-primary mb-2" @onclick="ShowAddForm">Add Student</button>

@if (showAddForm)
{
	<EditForm Model="newStudent" OnValidSubmit="AddStudent">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="mb-3">
			<label for="name" class="form-label">Name</label>
			<InputText id="name" class="form-control" @bind-Value="newStudent.Name" />
		</div>
		<div class="mb-3">
			<label for="email" class="form-label">Email</label>
			<InputText id="email" class="form-control" @bind-Value="newStudent.Email" />
		</div>
		<div class="mb-3">
			<label for="major" class="form-label">Major</label>
			<InputText id="major" class="form-control" @bind-Value="newStudent.Major"/>
		</div>
		<button type="submit" class="btn btn-success">Add Student</button>
	</EditForm>

}
<div class="table-responsive">
	<table class="table table-borderless">
		<thead>
			<tr>
				<th>ID</th>
				<th>Name</th>
				<th>Email</th>
				<th>Major</th>
				<th>Created At</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var student in students)
			{
				<tr>
					<td>@student.Id</td>
					<td>@student.Name</td>
					<td>@student.Email</td>
					<td>@student.Major</td>
					<td>@student.CreatedAt.ToShortDateString()</td>
					<td>
						<button class="btn btn-danger btn-sm" @onclick="() => students.Remove(student)">Delete</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>


@code {
	private List<Student> students = new List<Student>();
	private Student newStudent = new Student();
	private bool showAddForm = false;

	public class Student {
		public int Id { get; set; }

		[Required]
		public string Name { get; set; } = string.Empty;

		[Required]
		public string Email { get; set; } = string.Empty;

		[Required]
		public string Major { get; set; } = string.Empty;
		public DateTime CreatedAt { get; set; } = DateTime.Now;
	}

	protected override void OnInitialized()
	{
		base.OnInitialized();
		students = new List<Student>
		{
				new Student { Id = 1, Name = "Nazar Zhyliuk	", Email = "125226@student.san.edu.pl", Major = "Informatics", CreatedAt = DateTime.Now },
				new Student { Id = 1, Name = "Bartosz Czerniawski", Email = new Random().Next(100000, 200000) + "@student.san.edu.pl", Major = "Informatics", CreatedAt = DateTime.Now },
				new Student { Id = 1, Name = "Edmund Fiałkowski", Email = new Random().Next(100000, 200000) + "@student.san.edu.pl", Major = "Informatics", CreatedAt = DateTime.Now }
		};
	}
	private void ShowAddForm()
	{
		showAddForm = !showAddForm;
	}

	private void AddStudent()
	{
		newStudent.Id = students.Count + 1; 
		students.Add(newStudent);
		showAddForm = false;
		newStudent = new Student(); 
	}
}
